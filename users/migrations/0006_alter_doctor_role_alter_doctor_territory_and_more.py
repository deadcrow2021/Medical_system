# Generated by Django 4.0.2 on 2022-10-03 21:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0005_receptionnotes_cabinet_alter_doctor_role_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='doctor',
            name='role',
            field=models.CharField(choices=[('акушер-гинеколог', 'акушер-гинеколог'), ('терапевт ', 'терапевт'), ('специалист', 'специалист'), ('педиатор', 'педиатор'), ('стоматолог', 'стоматолог'), ('офтальмолог', 'офтальмолог')], default='----', max_length=30, verbose_name='Должность врача'),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='territory',
            field=models.CharField(choices=[('Карсунский', 'Карсунский район'), ('Радищевский', 'Радищевский район'), ('Старомайнский', 'Старомайнский район'), ('Ульяновский', 'Ульяновский район'), ('Сурский', 'Сурский район'), ('Новомалыклинский', 'Новомалыклинский район'), ('Базарносызганский', 'Базарносызганский район'), ('Чердаклинский', 'Чердаклинский район '), ('Барышский', 'Барышский район'), ('Николаевский', 'Николаевский район'), ('Сенгилеевский', 'Сенгилеевский район'), ('Цильнинский', 'Цильнинский район'), ('', '----'), ('Павловский', 'Павловский район'), ('Вешкаймский', 'Вешкаймский район'), ('Мелекесский', 'Мелекесский район'), ('Инзенский', 'Инзенский район'), ('Старокулаткинский', 'Старокулаткинский район'), ('Тереньгульский', 'Тереньгульский район'), ('Кузоватовский', 'Кузоватовский район'), ('Новоспасский', 'Новоспасский район'), ('Майнский', 'Майнский район')], default='Ульяновский', max_length=25, verbose_name='Территория'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='blood',
            field=models.CharField(blank=True, choices=[('2+', 'A(II) Rh+ '), ('1+', 'O(I) Rh+ '), ('2-', 'A(II) Rh- '), ('4-', 'AB(IV) Rh-'), ('3+', 'B(III) Rh+ '), ('3-', 'B(III) Rh- '), ('4+', 'AB(IV) Rh+'), ('1-', 'O(I) Rh- ')], max_length=2, verbose_name='Группа крови'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='city_village',
            field=models.CharField(choices=[('', '----'), ('1', 'Город'), ('2', 'Село')], max_length=1, verbose_name='Житель города/села'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='disability',
            field=models.CharField(blank=True, choices=[('2', 'Вторая'), ('1', 'Первая'), ('3', 'Третья')], max_length=1, verbose_name='Инвалидность'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='gender',
            field=models.CharField(choices=[('', '----'), ('f', 'Женщина'), ('m', 'Мужчина')], default='f', max_length=1, verbose_name='Пол'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='insurance',
            field=models.CharField(blank=True, choices=[('1', 'АО «Медицинская акционерная страховая компания» (АО «МАКС-М»)'), ('3', 'ООО «Страховая медицинская компания РЕСО-МЕД» (Московский филиал)'), ('5', 'ООО «Страховая компания «Ингосстрах-М»'), ('2', 'ООО «МСК «МЕДСТРАХ»»'), ('6', 'ООО «КАПИТАЛ МС» '), ('4', 'АО «Страховая компания «СОГАЗ-Мед»»')], max_length=1, verbose_name='Сраховая компания'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='social_status',
            field=models.CharField(blank=True, choices=[('h', 'Высший'), ('l', 'Низший'), ('m', 'Средний')], max_length=1, verbose_name='Соц. Статус'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='territory',
            field=models.CharField(choices=[('Карсунский', 'Карсунский район'), ('Радищевский', 'Радищевский район'), ('Старомайнский', 'Старомайнский район'), ('Ульяновский', 'Ульяновский район'), ('Сурский', 'Сурский район'), ('Новомалыклинский', 'Новомалыклинский район'), ('Базарносызганский', 'Базарносызганский район'), ('Чердаклинский', 'Чердаклинский район '), ('Барышский', 'Барышский район'), ('Николаевский', 'Николаевский район'), ('Сенгилеевский', 'Сенгилеевский район'), ('Цильнинский', 'Цильнинский район'), ('', '----'), ('Павловский', 'Павловский район'), ('Вешкаймский', 'Вешкаймский район'), ('Мелекесский', 'Мелекесский район'), ('Инзенский', 'Инзенский район'), ('Старокулаткинский', 'Старокулаткинский район'), ('Тереньгульский', 'Тереньгульский район'), ('Кузоватовский', 'Кузоватовский район'), ('Новоспасский', 'Новоспасский район'), ('Майнский', 'Майнский район')], max_length=25, verbose_name='Территория'),
        ),
        migrations.CreateModel(
            name='MedicalCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('father_name', models.CharField(blank=True, max_length=100, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(default='2000-01-12', verbose_name='Дата рождения')),
                ('age', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Полных лет')),
                ('residence_address', models.CharField(max_length=100, verbose_name='Адрес проживания')),
                ('registration_address', models.CharField(max_length=100, verbose_name='Адрес регистрции')),
                ('mobile_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=10, region=None, verbose_name='Мобильный телефон')),
                ('home_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=10, region=None, verbose_name='Домашний телефон')),
                ('work_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=10, region=None, verbose_name='Рабочий телефон')),
                ('email', models.EmailField(max_length=100, verbose_name='Адрес электронной почты')),
                ('marital_status', models.CharField(choices=[('5', 'Разведена'), ('3', 'Состоит в незарегистриро-ванном браке'), ('2', 'Состоит в зарегистри-рованном браке'), ('6', 'Разошлась'), ('', '----'), ('1', 'Никогда не состояла в браке'), ('4', 'Вдова')], default='', max_length=1, verbose_name='Брачное состояние')),
                ('trusted_person_fio', models.CharField(max_length=300, verbose_name='ФИО доверенного лица')),
                ('trusted_person_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=10, region=None, verbose_name='Мобильный телефон')),
                ('oms_policy', models.CharField(max_length=16, verbose_name='Полис ОМС')),
                ('snils', models.CharField(max_length=11, verbose_name='СНИЛС')),
                ('maternity_leave_start', models.DateField(blank=True, verbose_name='Начало декретного отпуска')),
                ('maternity_leave_finish', models.DateField(blank=True, verbose_name='Окончание декретного отпуска')),
                ('disability_certificate', models.CharField(blank=True, max_length=16, verbose_name='Номер отпуска по беременности и родам')),
                ('generic_certificate_number', models.CharField(blank=True, max_length=20, verbose_name='Номер родового сертификата')),
                ('generic_certificate_date', models.DateField(blank=True, verbose_name='Дата выдачи родового сертификата')),
                ('allergy', models.BooleanField(default=False, verbose_name='Аллергическая реакция')),
                ('allergy_description', models.CharField(default='', max_length=100, verbose_name='Описание аллергической реакции')),
                ('pregnancy_count', models.PositiveSmallIntegerField(blank=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Беременность по счету')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('first_visit_date', models.DateField(verbose_name='Дата первой явки (взятие на учет)')),
                ('childbirth_date', models.DateField(blank=True, verbose_name='Дата родов')),
                ('childbirth_gestation_period', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности родов (недели)')),
                ('med_org', models.CharField(blank=True, choices=[('', '----'), ('1', 'Болька 1'), ('2', 'Болька 2'), ('3', 'Болька 3')], max_length=150, verbose_name='Медицинская организация')),
                ('diagnosis', models.CharField(blank=True, max_length=200, verbose_name='Основной диагноз')),
                ('complications', models.CharField(blank=True, max_length=200, verbose_name='Осложнения данной беременности')),
                ('somatic_diseases', models.CharField(blank=True, max_length=200, verbose_name='Осложнения данной беременности')),
                ('gynecological_diseases', models.CharField(blank=True, max_length=200, verbose_name='Осложнения данной беременности')),
                ('doctor_confirmation', models.BooleanField(default=False, verbose_name='Подтверждение врача')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='card', to='home.patient')),
            ],
        ),
    ]
