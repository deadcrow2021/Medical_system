# Generated by Django 4.0.2 on 2022-10-10 21:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0014_alter_doctor_role_alter_doctor_territory_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='complicationrisk',
            name='risk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complications', to='home.obstetricrisk'),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='role',
            field=models.CharField(choices=[('акушер-гинеколог', 'акушер-гинеколог'), ('офтальмолог', 'офтальмолог'), ('стоматолог', 'стоматолог'), ('специалист', 'специалист'), ('педиатор', 'педиатор'), ('терапевт ', 'терапевт')], default='----', max_length=30, verbose_name='Должность врача'),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='territory',
            field=models.CharField(choices=[('Кузоватовский', 'Кузоватовский район'), ('Сурский', 'Сурский район'), ('Радищевский', 'Радищевский район'), ('Сенгилеевский', 'Сенгилеевский район'), ('Карсунский', 'Карсунский район'), ('Майнский', 'Майнский район'), ('Старокулаткинский', 'Старокулаткинский район'), ('Николаевский', 'Николаевский район'), ('Ульяновский', 'Ульяновский район'), ('Мелекесский', 'Мелекесский район'), ('Базарносызганский', 'Базарносызганский район'), ('Тереньгульский', 'Тереньгульский район'), ('Инзенский', 'Инзенский район'), ('Чердаклинский', 'Чердаклинский район '), ('Барышский', 'Барышский район'), ('Цильнинский', 'Цильнинский район'), ('Старомайнский', 'Старомайнский район'), ('Вешкаймский', 'Вешкаймский район'), ('Новоспасский', 'Новоспасский район'), ('Новомалыклинский', 'Новомалыклинский район'), ('', '----'), ('Павловский', 'Павловский район')], default='Ульяновский', max_length=25, verbose_name='Территория'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='father_blood_group',
            field=models.CharField(blank=True, choices=[('2', 'A(II)'), ('3', 'B(III)'), ('1', 'O(I)'), ('4', 'AB(IV)')], max_length=1, null=True, verbose_name='Группа крови'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='father_blood_rh',
            field=models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=1, null=True, verbose_name='Rh-фактор'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='gynecological_diseases',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Гинекологические  заболевания'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='marital_status',
            field=models.CharField(blank=True, choices=[('4', 'Вдова'), ('6', 'Разошлась'), ('2', 'Состоит в зарегистрированном браке'), ('3', 'Состоит в незарегистрированном браке'), ('5', 'Разведена'), ('1', 'Никогда не состояла в браке'), ('', '----')], default='', max_length=1, null=True, verbose_name='Брачное состояние'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='mother_blood_group',
            field=models.CharField(blank=True, choices=[('2', 'A(II)'), ('3', 'B(III)'), ('1', 'O(I)'), ('4', 'AB(IV)')], max_length=1, null=True, verbose_name='Группа крови'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='mother_blood_rh',
            field=models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=1, null=True, verbose_name='Rh-фактор'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='somatic_diseases',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Соматические заболевания'),
        ),
        migrations.AlterField(
            model_name='obstetricrisk',
            name='visit',
            field=models.CharField(blank=True, choices=[('11-14', 'Явка на 11-14 неделе'), ('30-40', 'Явка на 30-40 неделе'), ('1', 'Первая явка'), ('18-20', 'Явка на 18-20 неделе')], max_length=5, null=True, verbose_name='Срок явки'),
        ),
        migrations.CreateModel(
            name='UrineSowing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('result', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Результат')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urine_sowing', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='UrineAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('amount', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Количество, мл')),
                ('ph', models.CharField(blank=True, max_length=1000, null=True, verbose_name='pH')),
                ('density', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Плотность')),
                ('u_white_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Лейкоциты')),
                ('red_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Эритроциты')),
                ('protein', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Белок, г/л')),
                ('cylinders', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Цилиндры')),
                ('salt', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Соли')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urine', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='ThyroidStimulatingHormone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('period', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Срок (недель)')),
                ('result', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Результат')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ts_hormonr', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='TakingMedications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Дата начала приема препарата')),
                ('date_finish', models.DateField(blank=True, null=True, verbose_name='Дата окончания приема препарата')),
                ('indications', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Показания')),
                ('dose_duration', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Доза/Длительность')),
                ('side_effects', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Побочные эффекты')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Smears',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('result', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Результат')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='smears', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='RubellaVirus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('lgm', models.CharField(blank=True, max_length=1000, null=True, verbose_name='lgM')),
                ('lgg', models.CharField(blank=True, max_length=1000, null=True, verbose_name='lgG')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubella', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='PregnantWomanMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('complaints', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Жалобы')),
                ('weight_gain', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100000)], verbose_name='Прибака к массе тела (+г)')),
                ('systolic_blood_pressure', models.CharField(blank=True, max_length=50, null=True, verbose_name='Артериальное даавление систолическое (мм.рт.ст.)')),
                ('blood_pressure_diastolic', models.CharField(blank=True, max_length=50, null=True, verbose_name='Артериальное даавление диастолическое (мм.рт.ст.)')),
                ('pulse', models.CharField(blank=True, max_length=50, null=True, verbose_name='Пульс (уд/мин)')),
                ('fetus_heartbeat', models.CharField(blank=True, max_length=50, null=True, verbose_name='Сердцебиение плода (уд/мин) (>12 недель)')),
                ('fetus_stirring', models.CharField(blank=True, choices=[('-', 'Не ощущается'), ('+', 'Ощущается')], max_length=10, null=True, verbose_name='Шевеление плода: (>16 недель)')),
                ('fundal_height', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Высота дна матки (см) (>20 недель)')),
                ('abdominal_circumference', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Окружность живота (см) (>20 недель)')),
                ('fetal_position', models.CharField(blank=True, choices=[('попер', 'Попереченое'), ('кос', 'Косое'), ('прод', 'Продольное')], max_length=10, null=True, verbose_name='Положение плода')),
                ('to_pelvis_entrance', models.CharField(blank=True, choices=[('тк', 'Тазовый конец'), ('гол', 'Головка'), ('др', 'Другое')], max_length=10, null=True, verbose_name='Над входом в малый таз')),
                ('adjacent_part', models.CharField(blank=True, choices=[('приж', 'Прижата'), ('под', 'Подвижна')], max_length=10, null=True, verbose_name='Предлежащая часть')),
                ('protein_in_urine', models.CharField(blank=True, max_length=50, null=True, verbose_name='Белок в моче (-,1+,2+,3+)')),
                ('hemoglobin', models.CharField(blank=True, max_length=50, null=True, verbose_name='Гемоглобин (г/л)')),
                ('glucose', models.CharField(blank=True, max_length=50, null=True, verbose_name='Глюкоза, ммоль/л')),
                ('ttg', models.CharField(blank=True, max_length=50, null=True, verbose_name='ТТГ , мкМЕ/л')),
                ('s_agalactiae', models.CharField(blank=True, max_length=1000, null=True, verbose_name='S. agalactiae в мазке')),
                ('bacterioscopic_smears_examination', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Бактериоскопическое исследование мазков')),
                ('cervix_сytological_examination', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Цитологическое исследование микропрепарата шейки матки')),
                ('urine_culture', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Посев мочи на бессимптомную бактериурию')),
                ('fetal_development_assessment_11_14', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Комплексная оценка антенатального развития плода в 11-14 недель (скрининг 1-ого триместра)')),
                ('fetal_development_assessment_19_21', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Оценка антенатального развития плода в 19-21 неделю (скрининг 2-ого триместра)')),
                ('ultrasound_cervicometry', models.CharField(blank=True, max_length=1000, null=True, verbose_name='УЗИ-цервикометрия')),
                ('fetal_ultrasound', models.CharField(blank=True, max_length=1000, null=True, verbose_name='УЗИ плода/плодов по показаниям')),
                ('invasive_diagnostics', models.CharField(blank=True, max_length=200, null=True, verbose_name='Инвазивная диагностика при высоком риске хромосомных аномалий (ХА)')),
                ('fetal_cardiotocography', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Кардиотокография плода/плодов (КТГ)')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pregnant_woman_monitoring', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='PregnancyOutcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pregnancy_count', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Беременность по счету')),
                ('childbirth_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата исхода беременности')),
                ('pregnancy_outcome', models.CharField(blank=True, choices=[('а', 'Аборт'), ('р', 'Роды'), ('с', 'Смерть')], max_length=10, null=True, verbose_name='Исход беременности')),
                ('if_childbirth', models.CharField(blank=True, choices=[('сбо', 'Самопроизвольным - без осложнений'), ('окс', 'Оперативным - кесарево сечение'), ('со', 'Самопроизвольным - с осложнениями')], max_length=10, null=True, verbose_name='Роды')),
                ('if_abortion', models.CharField(blank=True, choices=[('с', 'Самопроизвольный'), ('и', 'Искусственный')], max_length=10, null=True, verbose_name='Аборт')),
                ('death_time', models.DateTimeField(blank=True, null=True, verbose_name='Смерть')),
                ('disease', models.CharField(blank=True, max_length=10, null=True, verbose_name='Причина смерти (шифр по МКБ-10)')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('number_of_fetuses', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(10)], verbose_name='Количество плодов')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pregnancy_outcome', to='home.patient')),
            ],
            options={
                'verbose_name': 'Исход беременности',
                'verbose_name_plural': 'Исходы беременностей',
            },
        ),
        migrations.CreateModel(
            name='Pelviometry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('dsp', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='D.sp. (см)')),
                ('dcr', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='D.cr. (см)')),
                ('dtroch', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='D.troch. (см)')),
                ('dext', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='D.ext. (см)')),
                ('cvera', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='C.vera. (см)')),
                ('cdiag', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='C.diag. (см)')),
                ('solovyov_index', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Индекс соловьева (см)')),
                ('michaelis_rhombus_x', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Ромб Михаэлиса X (см)')),
                ('michaelis_rhombus_y', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Ромб Михаэлиса Y (см)')),
                ('pelvis_dimensions', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Дополнительные размеры таза (по показаниям)')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pelviometry', to='home.patient')),
            ],
            options={
                'verbose_name': 'Пельвиометрия',
            },
        ),
        migrations.CreateModel(
            name='GlucoseToleranceTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('period', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Срок (недель)')),
                ('result', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Результат')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glucose_test', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Coagulogram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('platelet_count', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Количество тромбоцитов, 10^9/л')),
                ('astv', models.CharField(blank=True, max_length=1000, null=True, verbose_name='АЧТВ, сек.')),
                ('fibrinogen', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Фибриноген, г/л')),
                ('prothrombin_time', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Протромбиновое время, %')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='сoagulogram', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='CervixCytologicalExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('result', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Результат')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cervix_exam', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='BloodAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('hemoglobin', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Гемоглобин, г/л')),
                ('red_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Эритроциты, 10^12/л')),
                ('color_indicator', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Цветовой показатель, %')),
                ('reticulocytes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ретикулоциты, %')),
                ('platelets', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Тромбоциты, 10^9/л')),
                ('white_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Лейкоциты, 10^9/л')),
                ('myelocytes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Миелоциты, %')),
                ('metamyelocytes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Метамиелоциты, %')),
                ('stick_core', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Палочкоядерные, %')),
                ('segmentonuclear', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Сегметоядерные, %')),
                ('eosinophils', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Эозинофилы, %')),
                ('basophils', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Базофилы, %')),
                ('lymphocytes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Лимфоциты , %')),
                ('monocytes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Моноциты, %')),
                ('soe', models.CharField(blank=True, max_length=1000, null=True, verbose_name='СОЭ, мм/ч')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_analysis', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='BiochemicalBloodAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('total_bilirubin', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Общий билирубин, мкмоль/л')),
                ('direct_bilirubin', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Прямой билирубин, мкмоль/л')),
                ('total_protein', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Общий белок, г/л')),
                ('alt', models.CharField(blank=True, max_length=1000, null=True, verbose_name='АЛТ, ЕД/л')),
                ('ast', models.CharField(blank=True, max_length=1000, null=True, verbose_name='АСТ, ЕД/л')),
                ('glucose', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Глюкоза, ммоль/л')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biochemical_blood', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='BacterioscopicSmearsExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('c_white_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Лейкоциты')),
                ('c_epithelium', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Эпителий')),
                ('c_key_cels', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ключевые клетки')),
                ('c_candida', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Кандиды')),
                ('c_trichomonads', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Трихомонады')),
                ('c_gonococci', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Гонококки')),
                ('c_ph', models.CharField(blank=True, max_length=1000, null=True, verbose_name='pH')),
                ('v_white_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Лейкоциты')),
                ('v_epithelium', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Эпителий')),
                ('v_key_cels', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ключевые клетки')),
                ('v_candida', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Кандиды')),
                ('v_trichomonads', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Трихомонады')),
                ('v_gonococci', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Гонококки')),
                ('v_ph', models.CharField(blank=True, max_length=1000, null=True, verbose_name='pH')),
                ('u_white_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Лейкоциты')),
                ('u_epithelium', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Эпителий')),
                ('u_key_cels', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ключевые клетки')),
                ('u_candida', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Кандиды')),
                ('u_trichomonads', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Трихомонады')),
                ('u_gonococci', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Гонококки')),
                ('u_ph', models.CharField(blank=True, max_length=1000, null=True, verbose_name='pH')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bacterio_smears', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_number', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Номер посещения')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('analysis', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Анализ')),
                ('appointment', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Назначения')),
                ('disability_certificate', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Листок нетрудоспособности')),
                ('next_visit_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='AntiresusBodies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('antiresus_bodies', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Антирезусные тела')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='antiresus_bodies', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='AntibodiesDetermination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('treponema_antibodies', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Антитела к бледной трепонеме')),
                ('hiv_antibodies', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Антитела классов M, G к ВИЧ ½ и антиген р24')),
                ('hbsag_antibodies', models.CharField(blank=True, max_length=1000, null=True, verbose_name='HBsAg или антитела к HBsAg')),
                ('anti_hcv', models.CharField(blank=True, max_length=1000, null=True, verbose_name='anti-HCV IgG и anti-HCV IgM')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='antibodies', to='home.patient')),
            ],
        ),
    ]
