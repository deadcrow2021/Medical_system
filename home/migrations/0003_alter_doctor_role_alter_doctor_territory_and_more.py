# Generated by Django 4.0.2 on 2022-10-12 20:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0002_alter_doctor_role_alter_doctor_territory_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='doctor',
            name='role',
            field=models.CharField(choices=[('специалист', 'специалист'), ('терапевт ', 'терапевт'), ('стоматолог', 'стоматолог'), ('педиатор', 'педиатор'), ('офтальмолог', 'офтальмолог'), ('акушер-гинеколог', 'акушер-гинеколог')], default='----', max_length=30, verbose_name='Должность врача'),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='territory',
            field=models.CharField(choices=[('Чердаклинский', 'Чердаклинский район '), ('Кузоватовский', 'Кузоватовский район'), ('Новоспасский', 'Новоспасский район'), ('Инзенский', 'Инзенский район'), ('Ульяновский', 'Ульяновский район'), ('Сенгилеевский', 'Сенгилеевский район'), ('Базарносызганский', 'Базарносызганский район'), ('Старомайнский', 'Старомайнский район'), ('Сурский', 'Сурский район'), ('Майнский', 'Майнский район'), ('Старокулаткинский', 'Старокулаткинский район'), ('Карсунский', 'Карсунский район'), ('', '----'), ('Павловский', 'Павловский район'), ('Мелекесский', 'Мелекесский район'), ('Новомалыклинский', 'Новомалыклинский район'), ('Тереньгульский', 'Тереньгульский район'), ('Николаевский', 'Николаевский район'), ('Цильнинский', 'Цильнинский район'), ('Вешкаймский', 'Вешкаймский район'), ('Радищевский', 'Радищевский район'), ('Барышский', 'Барышский район')], default='Ульяновский', max_length=25, verbose_name='Территория'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='father_blood_group',
            field=models.CharField(blank=True, choices=[('1', 'O(I)'), ('2', 'A(II)'), ('4', 'AB(IV)'), ('3', 'B(III)')], max_length=1, null=True, verbose_name='Группа крови'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='father_blood_rh',
            field=models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=1, null=True, verbose_name='Rh-фактор'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='marital_status',
            field=models.CharField(blank=True, choices=[('2', 'Состоит в зарегистрированном браке'), ('6', 'Разошлась'), ('3', 'Состоит в незарегистрированном браке'), ('', '----'), ('1', 'Никогда не состояла в браке'), ('4', 'Вдова'), ('5', 'Разведена')], default='', max_length=1, null=True, verbose_name='Брачное состояние'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='mother_blood_group',
            field=models.CharField(blank=True, choices=[('1', 'O(I)'), ('2', 'A(II)'), ('4', 'AB(IV)'), ('3', 'B(III)')], max_length=1, null=True, verbose_name='Группа крови'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='mother_blood_rh',
            field=models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=1, null=True, verbose_name='Rh-фактор'),
        ),
        migrations.AlterField(
            model_name='obstetricrisk',
            name='visit',
            field=models.CharField(blank=True, choices=[('11-14', 'Явка на 11-14 неделе'), ('1', 'Первая явка'), ('30-40', 'Явка на 30-40 неделе'), ('18-20', 'Явка на 18-20 неделе')], max_length=5, null=True, verbose_name='Срок явки'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='gender',
            field=models.CharField(choices=[('', '----'), ('f', 'Женский'), ('m', 'Мужской')], default='f', max_length=1, verbose_name='Пол'),
        ),
        migrations.AlterField(
            model_name='pregnancyoutcome',
            name='if_childbirth',
            field=models.CharField(blank=True, choices=[('ocs', 'Оперативным - кесарево сечение'), ('sc', 'Самопроизвольным - с осложнениями'), ('swc', 'Самопроизвольным - без осложнений')], max_length=10, null=True, verbose_name='Роды'),
        ),
        migrations.AlterField(
            model_name='pregnantwomanmonitoring',
            name='adjacent_part',
            field=models.CharField(blank=True, choices=[('приж', 'Прижата'), ('под', 'Подвижна')], max_length=10, null=True, verbose_name='Предлежащая часть'),
        ),
        migrations.AlterField(
            model_name='pregnantwomanmonitoring',
            name='fetal_position',
            field=models.CharField(blank=True, choices=[('попер', 'Попереченое'), ('прод', 'Продольное'), ('кос', 'Косое')], max_length=10, null=True, verbose_name='Положение плода'),
        ),
        migrations.AlterField(
            model_name='pregnantwomanmonitoring',
            name='to_pelvis_entrance',
            field=models.CharField(blank=True, choices=[('гол', 'Головка'), ('тк', 'Тазовый конец'), ('др', 'Другое')], max_length=10, null=True, verbose_name='Над входом в малый таз'),
        ),
        migrations.CreateModel(
            name='PatientInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('congenital_malformations', models.BooleanField(default=False, null=True, verbose_name='Врожденные пороки развития')),
                ('congenital_malformations_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Перечисление врожденных пороков')),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Рост (см)')),
                ('mass', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Масса тела при поставке на учет (кг)')),
                ('imt', models.PositiveSmallIntegerField(blank=True, max_length=200, null=True, verbose_name='ИМТ (кг/м2)')),
                ('preeclampsia_risk', models.CharField(blank=True, choices=[('0', 'Низкий'), ('1', 'Высокий')], max_length=1, null=True, verbose_name='Риск преэклампсии')),
                ('preeclampsia_risk_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значение риска')),
                ('premature_birth_risk', models.CharField(blank=True, choices=[('0', 'Низкий'), ('1', 'Высокий')], max_length=1, null=True, verbose_name='Риск преждевременных родов')),
                ('premature_birth_risk_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значение риска')),
                ('growth_retardation_risk', models.CharField(blank=True, choices=[('0', 'Низкий'), ('1', 'Высокий')], max_length=1, null=True, verbose_name='Риск задержки роста плода')),
                ('growth_retardation_risk_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значение риска')),
                ('thromboembolic_complications', models.CharField(blank=True, choices=[('0', 'Низкий'), ('1', 'Высокий')], max_length=1, null=True, verbose_name='Риск тромбоэболических осложнений')),
                ('thromboembolic_complications_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значение риска')),
                ('another_risks', models.CharField(blank=True, choices=[('0', 'Низкий'), ('1', 'Высокий')], max_length=1, null=True, verbose_name='Другие риски')),
                ('another_risks_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('child_infections', models.BooleanField(default=False, null=True, verbose_name='Детские инфекции')),
                ('child_infections_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('dispensary_accounting', models.CharField(blank=True, choices=[('0', 'Не состояла'), ('1', 'Состояла')], max_length=1, null=True, verbose_name='Диспансерский учет')),
                ('dispensary_accounting_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('injures_operations', models.BooleanField(default=False, null=True, verbose_name='Травмы/операции')),
                ('injures_operations_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('somatic_diseases', models.BooleanField(default=False, null=True, verbose_name='Соматические заболевания')),
                ('somatic_diseases_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('socially_significant_infections', models.CharField(blank=True, max_length=200, null=True, verbose_name='Социально значимые инфекции')),
                ('socially_significant_infections_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('hiv_status', models.CharField(blank=True, choices=[('0', 'Отрицательный'), ('1', 'Положительный')], max_length=1, null=True, verbose_name='ВИЧ-статус')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата (при наличии)')),
                ('epidnomer', models.CharField(blank=True, max_length=10, null=True, verbose_name='Эпидномер (при наличии)')),
                ('antiretroviral_therapy', models.CharField(blank=True, max_length=200, null=True, verbose_name='Антиретровирусная терапия во время беременности')),
                ('hereditary_diseases', models.BooleanField(default=False, null=True, verbose_name='Наследственные заболевания')),
                ('hereditary_diseases_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('blood_transfusions', models.BooleanField(default=False, null=True, verbose_name='Гемотрансфузии')),
                ('year', models.CharField(blank=True, max_length=4, null=True, verbose_name='Год')),
                ('last_fluorography_date', models.DateField(blank=True, null=True, verbose_name='Последняя флюорография (дата)')),
                ('last_fluorography_date_result', models.CharField(blank=True, max_length=200, null=True, verbose_name='Последняя флюорография (результат)')),
                ('bad_habits', models.BooleanField(default=False, null=True, verbose_name='Вредные привычки')),
                ('smoking', models.CharField(blank=True, choices=[('', '----'), ('1/2-1', 'От 1/2 до 1 пачки'), ('<1/2', 'Меньше 1/2 пачки'), ('1>', 'Больше 1 пачки')], max_length=10, null=True, verbose_name='Курение (в день)')),
                ('alcohol', models.CharField(blank=True, choices=[('1-2m', '1-2 раза в месяц'), ('', '----'), ('1', 'Каждый день'), ('1-2w', '1-2 раза в неделю')], max_length=10, null=True, verbose_name='Алкоголь')),
                ('alcohol_type', models.CharField(blank=True, max_length=200, null=True, verbose_name='Вид алкоголя')),
                ('drugs', models.CharField(blank=True, max_length=200, null=True, verbose_name='Наркотики (название)')),
                ('occupational_hazards', models.BooleanField(default=False, null=True, verbose_name='Профессиональные вредности')),
                ('occupational_hazards_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('tetanus', models.BooleanField(default=False, null=True, verbose_name='Столбняк')),
                ('measles', models.BooleanField(default=False, null=True, verbose_name='Корь')),
                ('rubella', models.BooleanField(default=False, null=True, verbose_name='Краснуха')),
                ('chickenpox', models.BooleanField(default=False, null=True, verbose_name='Ветряная оспа')),
                ('flu', models.BooleanField(default=False, null=True, verbose_name='Грипп')),
                ('HPV', models.BooleanField(default=False, null=True, verbose_name='ВПЧ')),
                ('hepatitis_B', models.BooleanField(default=False, null=True, verbose_name='гепатит В')),
                ('other_vaccnation', models.CharField(blank=True, max_length=200, null=True, verbose_name='Другие прививки')),
                ('year_start', models.CharField(blank=True, max_length=4, null=True, verbose_name='Год начала')),
                ('profusion', models.CharField(blank=True, choices=[('2', 'Умеренные'), ('3', 'Обильные'), ('1', 'Скудные')], max_length=10, null=True, verbose_name='Обильность')),
                ('painfulness', models.CharField(blank=True, choices=[('0', 'Безболезненные'), ('1', 'Болезненные')], max_length=10, null=True, verbose_name='Болезненность')),
                ('regularity', models.CharField(blank=True, choices=[('0', 'Нерегулярные'), ('1', 'Регулярные')], max_length=10, null=True, verbose_name='Регулярность')),
                ('sexual_life', models.CharField(blank=True, max_length=4, null=True, verbose_name='Половая жизнь (год)')),
                ('contraception_method', models.CharField(blank=True, max_length=200, null=True, verbose_name='Контрацепция (метод)')),
                ('contraception_period', models.CharField(blank=True, max_length=200, null=True, verbose_name='Контрацепция (период)')),
                ('diseases_operations', models.CharField(blank=True, max_length=200, null=True, verbose_name='Гинекологические заболевания, операции')),
                ('disease_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('sti', models.BooleanField(default=False, null=True, verbose_name='Инфекции, передаваемые половым путем')),
                ('treatment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Лечение')),
                ('treatment_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('year_mammary', models.CharField(blank=True, max_length=4, null=True, verbose_name='Год обследования')),
                ('mammary_method', models.CharField(blank=True, max_length=200, null=True, verbose_name='Метод')),
                ('mammary_result', models.CharField(blank=True, max_length=200, null=True, verbose_name='Результат')),
                ('year_cervix', models.CharField(blank=True, max_length=4, null=True, verbose_name='Год обследования')),
                ('cervix_method', models.CharField(blank=True, max_length=200, null=True, verbose_name='Метод')),
                ('cervix_result', models.CharField(blank=True, max_length=200, null=True, verbose_name='Результат')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_information', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='FatherInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Полных лет')),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Рост (см)')),
                ('mass', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Масса тела при поставке на учет (кг)')),
                ('imt', models.PositiveSmallIntegerField(blank=True, max_length=200, null=True, verbose_name='ИМТ (кг/м2)')),
                ('bad_habits', models.CharField(blank=True, choices=[('d', 'Наркотики'), ('s', 'Курение'), ('', '----'), ('a', 'Алкоголь')], max_length=10, null=True, verbose_name='Вредные привычки')),
                ('sti', models.BooleanField(default=False, null=True, verbose_name='Инфекции, передаваемые половым путем')),
                ('sti_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('treatment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Лечение')),
                ('treatment_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('hiv', models.BooleanField(default=False, null=True, verbose_name='ВИЧ')),
                ('tuberculosis', models.BooleanField(default=False, null=True, verbose_name='Туберкулез')),
                ('hepatitis_b', models.BooleanField(default=False, null=True, verbose_name='Гепатит В')),
                ('hepatitis_c', models.BooleanField(default=False, null=True, verbose_name='Гепатит С')),
                ('syphilis', models.BooleanField(default=False, null=True, verbose_name='Сифилис')),
                ('others', models.BooleanField(default=False, null=True, verbose_name='Другие')),
                ('last_fluorography_date', models.DateField(blank=True, null=True, verbose_name='Последняя флюорография (дата)')),
                ('last_fluorography_date_result', models.CharField(blank=True, max_length=200, null=True, verbose_name='Последняя флюорография (результат)')),
                ('tetanus', models.BooleanField(default=False, null=True, verbose_name='Столбняк')),
                ('measles', models.BooleanField(default=False, null=True, verbose_name='Корь')),
                ('rubella', models.BooleanField(default=False, null=True, verbose_name='Краснуха')),
                ('flu', models.BooleanField(default=False, null=True, verbose_name='Грипп')),
                ('diphtheria', models.BooleanField(default=False, null=True, verbose_name='Дифтерия')),
                ('other_vaccnation', models.CharField(blank=True, max_length=200, null=True, verbose_name='Другие прививки')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='father', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='CarvixScar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('operation_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название операции')),
                ('if_caesarean', models.CharField(blank=True, max_length=200, null=True, verbose_name='При кесаревом сечении')),
                ('scar_localization', models.CharField(blank=True, max_length=200, null=True, verbose_name='Локализация рубца на матке')),
                ('operation_features', models.CharField(blank=True, max_length=200, null=True, verbose_name='Особенности операции, п/о периода')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carvix', to='home.patient')),
            ],
        ),
    ]
