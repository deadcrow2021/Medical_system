# Generated by Django 4.0.2 on 2022-10-09 20:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0016_alter_pregnancyoutcome_options_alter_doctor_role_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='doctor',
            name='role',
            field=models.CharField(choices=[('терапевт ', 'терапевт'), ('педиатор', 'педиатор'), ('специалист', 'специалист'), ('акушер-гинеколог', 'акушер-гинеколог'), ('стоматолог', 'стоматолог'), ('офтальмолог', 'офтальмолог')], default='----', max_length=30, verbose_name='Должность врача'),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='territory',
            field=models.CharField(choices=[('Сенгилеевский', 'Сенгилеевский район'), ('Мелекесский', 'Мелекесский район'), ('Старомайнский', 'Старомайнский район'), ('Майнский', 'Майнский район'), ('', '----'), ('Карсунский', 'Карсунский район'), ('Старокулаткинский', 'Старокулаткинский район'), ('Радищевский', 'Радищевский район'), ('Тереньгульский', 'Тереньгульский район'), ('Чердаклинский', 'Чердаклинский район '), ('Новоспасский', 'Новоспасский район'), ('Новомалыклинский', 'Новомалыклинский район'), ('Ульяновский', 'Ульяновский район'), ('Базарносызганский', 'Базарносызганский район'), ('Павловский', 'Павловский район'), ('Цильнинский', 'Цильнинский район'), ('Николаевский', 'Николаевский район'), ('Вешкаймский', 'Вешкаймский район'), ('Сурский', 'Сурский район'), ('Кузоватовский', 'Кузоватовский район'), ('Инзенский', 'Инзенский район'), ('Барышский', 'Барышский район')], default='Ульяновский', max_length=25, verbose_name='Территория'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='father_blood_group',
            field=models.CharField(blank=True, choices=[('1', 'O(I)'), ('2', 'A(II)'), ('3', 'B(III)'), ('4', 'AB(IV)')], max_length=1, null=True, verbose_name='Группа крови'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='father_blood_rh',
            field=models.CharField(blank=True, choices=[('-', '-'), ('+', '+')], max_length=1, null=True, verbose_name='Rh-фактор'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='marital_status',
            field=models.CharField(blank=True, choices=[('5', 'Разведена'), ('1', 'Никогда не состояла в браке'), ('3', 'Состоит в незарегистрированном браке'), ('', '----'), ('2', 'Состоит в зарегистрированном браке'), ('6', 'Разошлась'), ('4', 'Вдова')], default='', max_length=1, null=True, verbose_name='Брачное состояние'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='mother_blood_group',
            field=models.CharField(blank=True, choices=[('1', 'O(I)'), ('2', 'A(II)'), ('3', 'B(III)'), ('4', 'AB(IV)')], max_length=1, null=True, verbose_name='Группа крови'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='mother_blood_rh',
            field=models.CharField(blank=True, choices=[('-', '-'), ('+', '+')], max_length=1, null=True, verbose_name='Rh-фактор'),
        ),
        migrations.AlterField(
            model_name='obstetricrisk',
            name='visit',
            field=models.CharField(blank=True, choices=[('30-40', 'Явка на 30-40 неделе'), ('11-14', 'Явка на 11-14 неделе'), ('1', 'Первая явка'), ('18-20', 'Явка на 18-20 неделе')], max_length=5, null=True, verbose_name='Срок явки'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='gender',
            field=models.CharField(choices=[('m', 'Мужской'), ('f', 'Женский'), ('', '----')], default='f', max_length=1, verbose_name='Пол'),
        ),
        migrations.AlterField(
            model_name='pregnancyoutcome',
            name='if_childbirth',
            field=models.CharField(blank=True, choices=[('сбо', 'Самопроизвольным - без осложнений'), ('со', 'Самопроизвольным - с осложнениями'), ('окс', 'Оперативным - кесарево сечение')], max_length=10, null=True, verbose_name='Роды'),
        ),
        migrations.CreateModel(
            name='TakingMedications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Дата начала приема препарата')),
                ('date_finish', models.DateField(blank=True, null=True, verbose_name='Дата окончания приема препарата')),
                ('indications', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Показания')),
                ('dose_duration', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Доза/Длительность')),
                ('side_effects', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Побочные эффекты')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='PregnantWomanMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('complaints', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Жалобы')),
                ('weight_gain', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100000)], verbose_name='Прибака к массе тела (+г)')),
                ('systolic_blood_pressure', models.CharField(blank=True, max_length=50, null=True, verbose_name='Артериальное даавление систолическое (мм.рт.ст.)')),
                ('blood_pressure_diastolic', models.CharField(blank=True, max_length=50, null=True, verbose_name='Артериальное даавление диастолическое (мм.рт.ст.)')),
                ('pulse', models.CharField(blank=True, max_length=50, null=True, verbose_name='Пульс (уд/мин)')),
                ('fetus_heartbeat', models.CharField(blank=True, max_length=50, null=True, verbose_name='Сердцебиение плода (уд/мин) (>12 недель)')),
                ('fetus_stirring', models.CharField(blank=True, choices=[('+', 'Ощущается'), ('-', 'Не ощущается')], max_length=10, null=True, verbose_name='Шевеление плода: (>16 недель)')),
                ('fundal_height', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Высота дна матки (см) (>20 недель)')),
                ('abdominal_circumference', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Окружность живота (см) (>20 недель)')),
                ('fetal_position', models.CharField(blank=True, choices=[('прод', 'Продольное'), ('кос', 'Косое'), ('попер', 'Попереченое')], max_length=10, null=True, verbose_name='Положение плода')),
                ('to_pelvis_entrance', models.CharField(blank=True, choices=[('др', 'Другое'), ('тк', 'Тазовый конец'), ('гол', 'Головка')], max_length=10, null=True, verbose_name='Над входом в малый таз')),
                ('adjacent_part', models.CharField(blank=True, choices=[('под', 'Подвижна'), ('приж', 'Прижата')], max_length=10, null=True, verbose_name='Предлежащая часть')),
                ('protein_in_urine', models.CharField(blank=True, max_length=50, null=True, verbose_name='Белок в моче (-,1+,2+,3+)')),
                ('hemoglobin', models.CharField(blank=True, max_length=50, null=True, verbose_name='Гемоглобин (г/л)')),
                ('glucose', models.CharField(blank=True, max_length=50, null=True, verbose_name='Глюкоза, ммоль/л')),
                ('ttg', models.CharField(blank=True, max_length=50, null=True, verbose_name='ТТГ , мкМЕ/л')),
                ('s_agalactiae', models.CharField(blank=True, max_length=1000, null=True, verbose_name='S. agalactiae в мазке')),
                ('bacterioscopic_smears_examination', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Бактериоскопическое исследование мазков')),
                ('cervix_сytological_examination', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Цитологическое исследование микропрепарата шейки матки')),
                ('urine_culture', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Посев мочи на бессимптомную бактериурию')),
                ('fetal_development_assessment_11_14', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Комплексная оценка антенатального развития плода в 11-14 недель (скрининг 1-ого триместра)')),
                ('fetal_development_assessment_19_21', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Оценка антенатального развития плода в 19-21 неделю (скрининг 2-ого триместра)')),
                ('ultrasound_cervicometry', models.CharField(blank=True, max_length=1000, null=True, verbose_name='УЗИ-цервикометрия')),
                ('fetal_ultrasound', models.CharField(blank=True, max_length=1000, null=True, verbose_name='УЗИ плода/плодов по показаниям')),
                ('invasive_diagnostics', models.CharField(blank=True, max_length=200, null=True, verbose_name='Инвазивная диагностика при высоком риске хромосомных аномалий (ХА)')),
                ('fetal_cardiotocography', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Кардиотокография плода/плодов (КТГ)')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pregnant_woman_monitoring', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Pelviometry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('dsp', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='D.sp. (см)')),
                ('dcr', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='D.cr. (см)')),
                ('dtroch', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='D.troch. (см)')),
                ('dext', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='D.ext. (см)')),
                ('cvera', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='C.vera. (см)')),
                ('cdiag', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='C.diag. (см)')),
                ('solovyov_index', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Индекс соловьева (см)')),
                ('michaelis_rhombus_x', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Ромб Михаэлиса X (см)')),
                ('michaelis_rhombus_y', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Ромб Михаэлиса Y (см)')),
                ('pelvis_dimensions', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Дополнительные размеры таза (по показаниям)')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pelviometry', to='home.patient')),
            ],
            options={
                'verbose_name': 'Пельвиометрия',
            },
        ),
        migrations.CreateModel(
            name='AppointmentList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_number', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Номер посещения')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('analysis', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Анализ')),
                ('appointment', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Назначения')),
                ('disability_certificate', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Листок нетрудоспособности')),
                ('next_visit_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='home.patient')),
            ],
        ),
    ]
