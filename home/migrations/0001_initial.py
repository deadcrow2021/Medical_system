# Generated by Django 4.0.2 on 2022-10-13 15:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChangeControlLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('who_changed', models.CharField(default='', max_length=100, verbose_name='Кто изменил')),
                ('modified_model', models.CharField(default='', max_length=100, verbose_name='Кого изменили')),
                ('change_type', models.CharField(max_length=100, verbose_name='Изменение')),
                ('before', models.CharField(default='', max_length=500, verbose_name='Было')),
                ('after', models.CharField(default='', max_length=500, verbose_name='Стало')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='CurrentPregnancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='usr', max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(default='sur', max_length=50, verbose_name='Фамилия')),
                ('father_name', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('cabinet', models.CharField(max_length=6, verbose_name='Кабинет')),
                ('territory', models.CharField(choices=[('Новоспасский', 'Новоспасский район'), ('Новомалыклинский', 'Новомалыклинский район'), ('Чердаклинский', 'Чердаклинский район '), ('', '----'), ('Мелекесский', 'Мелекесский район'), ('Базарносызганский', 'Базарносызганский район'), ('Барышский', 'Барышский район'), ('Старомайнский', 'Старомайнский район'), ('Вешкаймский', 'Вешкаймский район'), ('Кузоватовский', 'Кузоватовский район'), ('Сурский', 'Сурский район'), ('Ульяновский', 'Ульяновский район'), ('Цильнинский', 'Цильнинский район'), ('Сенгилеевский', 'Сенгилеевский район'), ('Карсунский', 'Карсунский район'), ('Радищевский', 'Радищевский район'), ('Николаевский', 'Николаевский район'), ('Майнский', 'Майнский район'), ('Тереньгульский', 'Тереньгульский район'), ('Павловский', 'Павловский район'), ('Старокулаткинский', 'Старокулаткинский район'), ('Инзенский', 'Инзенский район')], default='Ульяновский', max_length=25, verbose_name='Территория')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('med_org', models.CharField(blank=True, choices=[('', '----'), ('1', 'Болька 1'), ('2', 'Болька 2'), ('3', 'Болька 3')], max_length=150, verbose_name='Медицинская организация')),
                ('role', models.CharField(choices=[('педиатор', 'педиатор'), ('терапевт ', 'терапевт'), ('офтальмолог', 'офтальмолог'), ('специалист', 'специалист'), ('акушер-гинеколог', 'акушер-гинеколог'), ('стоматолог', 'стоматолог')], default='----', max_length=30, verbose_name='Должность врача')),
            ],
            options={
                'verbose_name': 'Доктор',
                'verbose_name_plural': 'Доктора',
                'ordering': ['-date_updated'],
            },
        ),
        migrations.CreateModel(
            name='MedicalCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, default='2000-01-12', null=True, verbose_name='Дата рождения')),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Полных лет')),
                ('residence_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Адрес проживания')),
                ('registration_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Адрес регистрции')),
                ('home_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=20, null=True, region=None, verbose_name='Домашний телефон')),
                ('work_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=20, null=True, region=None, verbose_name='Рабочий телефон')),
                ('marital_status', models.CharField(blank=True, choices=[('6', 'Разошлась'), ('4', 'Вдова'), ('5', 'Разведена'), ('1', 'Никогда не состояла в браке'), ('', '----'), ('2', 'Состоит в зарегистрированном браке'), ('3', 'Состоит в незарегистрированном браке')], default='', max_length=1, null=True, verbose_name='Брачное состояние')),
                ('trusted_person_fio', models.CharField(blank=True, max_length=300, null=True, verbose_name='ФИО доверенного лица')),
                ('trusted_person_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=20, null=True, region=None, verbose_name='Мобильный телефон')),
                ('oms_policy', models.CharField(blank=True, max_length=16, null=True, verbose_name='Полис ОМС')),
                ('snils', models.CharField(blank=True, max_length=11, null=True, verbose_name='СНИЛС')),
                ('maternity_leave_start', models.DateField(blank=True, null=True, verbose_name='Начало декретного отпуска')),
                ('maternity_leave_finish', models.DateField(blank=True, null=True, verbose_name='Окончание декретного отпуска')),
                ('disability_certificate', models.CharField(blank=True, max_length=16, null=True, verbose_name='Номер отпуска по беременности и родам')),
                ('generic_certificate_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер родового сертификата')),
                ('generic_certificate_date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи родового сертификата')),
                ('allergy', models.BooleanField(default=False, null=True, verbose_name='Аллергическая реакция')),
                ('allergy_description', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Описание аллергической реакции')),
                ('mother_blood_group', models.CharField(blank=True, choices=[('4', 'AB(IV)'), ('1', 'O(I)'), ('3', 'B(III)'), ('2', 'A(II)')], max_length=1, null=True, verbose_name='Группа крови')),
                ('mother_blood_rh', models.CharField(blank=True, choices=[('-', '-'), ('+', '+')], max_length=1, null=True, verbose_name='Rh-фактор')),
                ('mother_date_of_determination', models.DateField(blank=True, default='2022-01-01', null=True, verbose_name='Дата определения')),
                ('father_blood_group', models.CharField(blank=True, choices=[('4', 'AB(IV)'), ('1', 'O(I)'), ('3', 'B(III)'), ('2', 'A(II)')], max_length=1, null=True, verbose_name='Группа крови')),
                ('father_blood_rh', models.CharField(blank=True, choices=[('-', '-'), ('+', '+')], max_length=1, null=True, verbose_name='Rh-фактор')),
                ('father_date_of_determination', models.DateField(blank=True, default='2022-01-01', null=True, verbose_name='Дата определения')),
                ('pregnancy_count', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Беременность по счету')),
                ('births_by_term', models.CharField(blank=True, max_length=200, null=True, verbose_name='Данные роды по сроку')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('first_visit_date', models.DateField(blank=True, null=True, verbose_name='Дата первой явки (взятие на учет)')),
                ('childbirth_date', models.DateField(blank=True, null=True, verbose_name='Дата родов')),
                ('childbirth_gestation_period', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности родов (недели)')),
                ('med_org', models.CharField(blank=True, choices=[('', '----'), ('1', 'Болька 1'), ('2', 'Болька 2'), ('3', 'Болька 3')], max_length=150, null=True, verbose_name='Медицинская организация')),
                ('diagnosis', models.CharField(blank=True, max_length=200, null=True, verbose_name='Основной диагноз')),
                ('complications', models.CharField(blank=True, max_length=200, null=True, verbose_name='Осложнения данной беременности')),
                ('somatic_diseases', models.CharField(blank=True, max_length=200, null=True, verbose_name='Соматические заболевания')),
                ('gynecological_diseases', models.CharField(blank=True, max_length=200, null=True, verbose_name='Гинекологические  заболевания')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
            ],
            options={
                'verbose_name': 'Медицинская карта',
                'verbose_name_plural': 'Медицинские карты',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('father_name', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('gender', models.CharField(choices=[('m', 'Мужской'), ('', '----'), ('f', 'Женский')], default='f', max_length=1, verbose_name='Пол')),
                ('telephone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Телефонный номер')),
                ('email', models.EmailField(blank=True, max_length=60, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
                'ordering': ['-date_updated'],
            },
        ),
        migrations.CreateModel(
            name='UrineSowing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('result', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Результат')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urine_sowing', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='UrineAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('amount', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Количество, мл')),
                ('ph', models.CharField(blank=True, max_length=1000, null=True, verbose_name='pH')),
                ('density', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Плотность')),
                ('u_white_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Лейкоциты')),
                ('red_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Эритроциты')),
                ('protein', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Белок, г/л')),
                ('cylinders', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Цилиндры')),
                ('salt', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Соли')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urine', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='ThyroidStimulatingHormone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('period', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Срок (недель)')),
                ('result', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Результат')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ts_hormonr', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='TakingMedications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Дата начала приема препарата')),
                ('date_finish', models.DateField(blank=True, null=True, verbose_name='Дата окончания приема препарата')),
                ('indications', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Показания')),
                ('dose_duration', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Доза/Длительность')),
                ('side_effects', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Побочные эффекты')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='Smears',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('result', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Результат')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='smears', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='SelfMonitoringRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Краткое описание')),
                ('description', models.TextField(blank=True, max_length=1000, verbose_name='Описание')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='RubellaVirus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('lgm', models.CharField(blank=True, max_length=1000, null=True, verbose_name='lgM')),
                ('lgg', models.CharField(blank=True, max_length=1000, null=True, verbose_name='lgG')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubella', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='ReceptionNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('med_organization', models.CharField(blank=True, choices=[('', '----'), ('1', 'Болька 1'), ('2', 'Болька 2'), ('3', 'Болька 3')], max_length=10, verbose_name='Медицинская организация')),
                ('cabinet', models.CharField(blank=True, max_length=10, verbose_name='Кабинет')),
                ('date_meeting', models.DateTimeField(verbose_name='Время приема')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.patient')),
            ],
            options={
                'verbose_name': 'Запись приема',
                'verbose_name_plural': 'Записи приема',
                'ordering': ['-date_meeting', '-date_updated'],
            },
        ),
        migrations.CreateModel(
            name='PregnantWomanMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('complaints', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Жалобы')),
                ('weight_gain', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100000)], verbose_name='Прибака к массе тела (+г)')),
                ('systolic_blood_pressure', models.CharField(blank=True, max_length=50, null=True, verbose_name='Артериальное даавление систолическое (мм.рт.ст.)')),
                ('blood_pressure_diastolic', models.CharField(blank=True, max_length=50, null=True, verbose_name='Артериальное даавление диастолическое (мм.рт.ст.)')),
                ('pulse', models.CharField(blank=True, max_length=50, null=True, verbose_name='Пульс (уд/мин)')),
                ('fetus_heartbeat', models.CharField(blank=True, max_length=50, null=True, verbose_name='Сердцебиение плода (уд/мин) (>12 недель)')),
                ('fetus_stirring', models.CharField(blank=True, choices=[('+', 'Ощущается'), ('-', 'Не ощущается')], max_length=10, null=True, verbose_name='Шевеление плода: (>16 недель)')),
                ('fundal_height', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Высота дна матки (см) (>20 недель)')),
                ('abdominal_circumference', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Окружность живота (см) (>20 недель)')),
                ('fetal_position', models.CharField(blank=True, choices=[('кос', 'Косое'), ('прод', 'Продольное'), ('попер', 'Попереченое')], max_length=10, null=True, verbose_name='Положение плода')),
                ('to_pelvis_entrance', models.CharField(blank=True, choices=[('тк', 'Тазовый конец'), ('гол', 'Головка'), ('др', 'Другое')], max_length=10, null=True, verbose_name='Над входом в малый таз')),
                ('adjacent_part', models.CharField(blank=True, choices=[('приж', 'Прижата'), ('под', 'Подвижна')], max_length=10, null=True, verbose_name='Предлежащая часть')),
                ('protein_in_urine', models.CharField(blank=True, max_length=50, null=True, verbose_name='Белок в моче (-,1+,2+,3+)')),
                ('hemoglobin', models.CharField(blank=True, max_length=50, null=True, verbose_name='Гемоглобин (г/л)')),
                ('glucose', models.CharField(blank=True, max_length=50, null=True, verbose_name='Глюкоза, ммоль/л')),
                ('ttg', models.CharField(blank=True, max_length=50, null=True, verbose_name='ТТГ , мкМЕ/л')),
                ('s_agalactiae', models.CharField(blank=True, max_length=1000, null=True, verbose_name='S. agalactiae в мазке')),
                ('bacterioscopic_smears_examination', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Бактериоскопическое исследование мазков')),
                ('cervix_сytological_examination', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Цитологическое исследование микропрепарата шейки матки')),
                ('urine_culture', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Посев мочи на бессимптомную бактериурию')),
                ('fetal_development_assessment_11_14', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Комплексная оценка антенатального развития плода в 11-14 недель (скрининг 1-ого триместра)')),
                ('fetal_development_assessment_19_21', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Оценка антенатального развития плода в 19-21 неделю (скрининг 2-ого триместра)')),
                ('ultrasound_cervicometry', models.CharField(blank=True, max_length=1000, null=True, verbose_name='УЗИ-цервикометрия')),
                ('fetal_ultrasound', models.CharField(blank=True, max_length=1000, null=True, verbose_name='УЗИ плода/плодов по показаниям')),
                ('invasive_diagnostics', models.CharField(blank=True, max_length=200, null=True, verbose_name='Инвазивная диагностика при высоком риске хромосомных аномалий (ХА)')),
                ('fetal_cardiotocography', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Кардиотокография плода/плодов (КТГ)')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pregnant_woman_monitoring', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='PregnancyOutcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pregnancy_count', models.PositiveSmallIntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Беременность по счету')),
                ('childbirth_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата исхода беременности')),
                ('pregnancy_outcome', models.CharField(blank=True, choices=[('d', 'Смерть'), ('a', 'Аборт'), ('b', 'Роды')], max_length=10, null=True, verbose_name='Исход беременности')),
                ('if_childbirth', models.CharField(blank=True, choices=[('ocs', 'Оперативным - кесарево сечение'), ('swc', 'Самопроизвольным - без осложнений'), ('sc', 'Самопроизвольным - с осложнениями')], max_length=10, null=True, verbose_name='Роды')),
                ('if_abortion', models.CharField(blank=True, choices=[('a', 'Искусственный'), ('s', 'Самопроизвольный')], max_length=10, null=True, verbose_name='Аборт')),
                ('death_time', models.DateTimeField(blank=True, null=True, verbose_name='Смерть')),
                ('disease', models.CharField(blank=True, max_length=10, null=True, verbose_name='Причина смерти (шифр по МКБ-10)')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('number_of_fetuses', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(10)], verbose_name='Количество плодов')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pregnancy_outcome', to='home.patient')),
            ],
            options={
                'verbose_name': 'Исход беременности',
                'verbose_name_plural': 'Исходы беременностей',
                'ordering': ['pregnancy_count'],
            },
        ),
        migrations.CreateModel(
            name='Pelviometry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('dsp', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='D.sp. (см)')),
                ('dcr', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='D.cr. (см)')),
                ('dtroch', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='D.troch. (см)')),
                ('dext', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='D.ext. (см)')),
                ('cvera', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='C.vera. (см)')),
                ('cdiag', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='C.diag. (см)')),
                ('solovyov_index', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Индекс соловьева (см)')),
                ('michaelis_rhombus_x', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Ромб Михаэлиса X (см)')),
                ('michaelis_rhombus_y', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Ромб Михаэлиса Y (см)')),
                ('pelvis_dimensions', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Дополнительные размеры таза (по показаниям)')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pelviometry', to='home.currentpregnancy')),
            ],
            options={
                'verbose_name': 'Пельвиометрия',
            },
        ),
        migrations.CreateModel(
            name='PatientInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('congenital_malformations', models.BooleanField(default=False, null=True, verbose_name='Врожденные пороки развития')),
                ('congenital_malformations_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Перечисление врожденных пороков')),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Рост (см)')),
                ('mass', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Масса тела при поставке на учет (кг)')),
                ('imt', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='ИМТ (кг/м2)')),
                ('preeclampsia_risk', models.CharField(blank=True, choices=[('1', 'Высокий'), ('0', 'Низкий')], max_length=1, null=True, verbose_name='Риск преэклампсии')),
                ('preeclampsia_risk_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значение риска')),
                ('premature_birth_risk', models.CharField(blank=True, choices=[('1', 'Высокий'), ('0', 'Низкий')], max_length=1, null=True, verbose_name='Риск преждевременных родов')),
                ('premature_birth_risk_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значение риска')),
                ('growth_retardation_risk', models.CharField(blank=True, choices=[('1', 'Высокий'), ('0', 'Низкий')], max_length=1, null=True, verbose_name='Риск задержки роста плода')),
                ('growth_retardation_risk_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значение риска')),
                ('thromboembolic_complications', models.CharField(blank=True, choices=[('1', 'Высокий'), ('0', 'Низкий')], max_length=1, null=True, verbose_name='Риск тромбоэболических осложнений')),
                ('thromboembolic_complications_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значение риска')),
                ('another_risks', models.CharField(blank=True, choices=[('1', 'Высокий'), ('0', 'Низкий')], max_length=1, null=True, verbose_name='Другие риски')),
                ('another_risks_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('child_infections', models.BooleanField(default=False, null=True, verbose_name='Детские инфекции')),
                ('child_infections_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('dispensary_accounting', models.CharField(blank=True, choices=[('1', 'Состояла'), ('0', 'Не состояла')], max_length=1, null=True, verbose_name='Диспансерский учет')),
                ('dispensary_accounting_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('injures_operations', models.BooleanField(default=False, null=True, verbose_name='Травмы/операции')),
                ('injures_operations_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('somatic_diseases', models.BooleanField(default=False, null=True, verbose_name='Соматические заболевания')),
                ('somatic_diseases_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('socially_significant_infections', models.CharField(blank=True, max_length=200, null=True, verbose_name='Социально значимые инфекции')),
                ('socially_significant_infections_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('hiv_status', models.CharField(blank=True, choices=[('1', 'Положительный'), ('0', 'Отрицательный')], max_length=1, null=True, verbose_name='ВИЧ-статус')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата (при наличии)')),
                ('epidnomer', models.CharField(blank=True, max_length=10, null=True, verbose_name='Эпидномер (при наличии)')),
                ('antiretroviral_therapy', models.CharField(blank=True, max_length=200, null=True, verbose_name='Антиретровирусная терапия во время беременности')),
                ('hereditary_diseases', models.BooleanField(default=False, null=True, verbose_name='Наследственные заболевания')),
                ('hereditary_diseases_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('blood_transfusions', models.BooleanField(default=False, null=True, verbose_name='Гемотрансфузии')),
                ('year', models.CharField(blank=True, max_length=4, null=True, verbose_name='Год')),
                ('last_fluorography_date', models.DateField(blank=True, null=True, verbose_name='Последняя флюорография (дата)')),
                ('last_fluorography_date_result', models.CharField(blank=True, max_length=200, null=True, verbose_name='Последняя флюорография (результат)')),
                ('bad_habits', models.BooleanField(default=False, null=True, verbose_name='Вредные привычки')),
                ('smoking', models.CharField(blank=True, choices=[('1/2-1', 'От 1/2 до 1 пачки'), ('', '----'), ('<1/2', 'Меньше 1/2 пачки'), ('1>', 'Больше 1 пачки')], max_length=10, null=True, verbose_name='Курение (в день)')),
                ('alcohol', models.CharField(blank=True, choices=[('', '----'), ('1', 'Каждый день'), ('1-2w', '1-2 раза в неделю'), ('1-2m', '1-2 раза в месяц')], max_length=10, null=True, verbose_name='Алкоголь')),
                ('alcohol_type', models.CharField(blank=True, max_length=200, null=True, verbose_name='Вид алкоголя')),
                ('drugs', models.CharField(blank=True, max_length=200, null=True, verbose_name='Наркотики (название)')),
                ('occupational_hazards', models.BooleanField(default=False, null=True, verbose_name='Профессиональные вредности')),
                ('occupational_hazards_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('tetanus', models.BooleanField(default=False, null=True, verbose_name='Столбняк')),
                ('measles', models.BooleanField(default=False, null=True, verbose_name='Корь')),
                ('rubella', models.BooleanField(default=False, null=True, verbose_name='Краснуха')),
                ('chickenpox', models.BooleanField(default=False, null=True, verbose_name='Ветряная оспа')),
                ('flu', models.BooleanField(default=False, null=True, verbose_name='Грипп')),
                ('HPV', models.BooleanField(default=False, null=True, verbose_name='ВПЧ')),
                ('hepatitis_B', models.BooleanField(default=False, null=True, verbose_name='гепатит В')),
                ('other_vaccnation', models.CharField(blank=True, max_length=200, null=True, verbose_name='Другие прививки')),
                ('year_start', models.CharField(blank=True, max_length=4, null=True, verbose_name='Год начала')),
                ('profusion', models.CharField(blank=True, choices=[('1', 'Скудные'), ('2', 'Умеренные'), ('3', 'Обильные')], max_length=10, null=True, verbose_name='Обильность')),
                ('painfulness', models.CharField(blank=True, choices=[('0', 'Безболезненные'), ('1', 'Болезненные')], max_length=10, null=True, verbose_name='Болезненность')),
                ('regularity', models.CharField(blank=True, choices=[('1', 'Регулярные'), ('0', 'Нерегулярные')], max_length=10, null=True, verbose_name='Регулярность')),
                ('sexual_life', models.CharField(blank=True, max_length=4, null=True, verbose_name='Половая жизнь (год)')),
                ('contraception_method', models.CharField(blank=True, max_length=200, null=True, verbose_name='Контрацепция (метод)')),
                ('contraception_period', models.CharField(blank=True, max_length=200, null=True, verbose_name='Контрацепция (период)')),
                ('diseases_operations', models.CharField(blank=True, max_length=200, null=True, verbose_name='Гинекологические заболевания, операции')),
                ('disease_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('sti', models.BooleanField(default=False, null=True, verbose_name='Инфекции, передаваемые половым путем')),
                ('treatment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Лечение')),
                ('treatment_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('year_mammary', models.CharField(blank=True, max_length=4, null=True, verbose_name='Год обследования')),
                ('mammary_method', models.CharField(blank=True, max_length=200, null=True, verbose_name='Метод')),
                ('mammary_result', models.CharField(blank=True, max_length=200, null=True, verbose_name='Результат')),
                ('year_cervix', models.CharField(blank=True, max_length=4, null=True, verbose_name='Год обследования')),
                ('cervix_method', models.CharField(blank=True, max_length=200, null=True, verbose_name='Метод')),
                ('cervix_result', models.CharField(blank=True, max_length=200, null=True, verbose_name='Результат')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_information', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='ObstetricRisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit', models.CharField(blank=True, choices=[('11-14', 'Явка на 11-14 неделе'), ('18-20', 'Явка на 18-20 неделе'), ('30-40', 'Явка на 30-40 неделе'), ('1', 'Первая явка')], max_length=5, null=True, verbose_name='Срок явки')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risks', to='home.medicalcard')),
            ],
            options={
                'verbose_name': 'Акушерский риск',
                'verbose_name_plural': 'Акушерские риски',
            },
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease', models.CharField(max_length=270, verbose_name='Заболевание')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_cured', models.DateTimeField(blank=True, null=True, verbose_name='Дата излечения')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='home.patient')),
            ],
        ),
        migrations.AddField(
            model_name='medicalcard',
            name='patient',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='card', to='home.patient'),
        ),
        migrations.CreateModel(
            name='GlucoseToleranceTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('period', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Срок (недель)')),
                ('result', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Результат')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glucose_test', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='FatherInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Полных лет')),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Рост (см)')),
                ('mass', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Масса тела при поставке на учет (кг)')),
                ('imt', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='ИМТ (кг/м2)')),
                ('bad_habits', models.CharField(blank=True, choices=[('', '----'), ('a', 'Алкоголь'), ('s', 'Курение'), ('d', 'Наркотики')], max_length=10, null=True, verbose_name='Вредные привычки')),
                ('sti', models.BooleanField(default=False, null=True, verbose_name='Инфекции, передаваемые половым путем')),
                ('sti_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('treatment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Лечение')),
                ('treatment_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('hiv', models.BooleanField(default=False, null=True, verbose_name='ВИЧ')),
                ('tuberculosis', models.BooleanField(default=False, null=True, verbose_name='Туберкулез')),
                ('hepatitis_b', models.BooleanField(default=False, null=True, verbose_name='Гепатит В')),
                ('hepatitis_c', models.BooleanField(default=False, null=True, verbose_name='Гепатит С')),
                ('syphilis', models.BooleanField(default=False, null=True, verbose_name='Сифилис')),
                ('others', models.BooleanField(default=False, null=True, verbose_name='Другие')),
                ('last_fluorography_date', models.DateField(blank=True, null=True, verbose_name='Последняя флюорография (дата)')),
                ('last_fluorography_date_result', models.CharField(blank=True, max_length=200, null=True, verbose_name='Последняя флюорография (результат)')),
                ('tetanus', models.BooleanField(default=False, null=True, verbose_name='Столбняк')),
                ('measles', models.BooleanField(default=False, null=True, verbose_name='Корь')),
                ('rubella', models.BooleanField(default=False, null=True, verbose_name='Краснуха')),
                ('flu', models.BooleanField(default=False, null=True, verbose_name='Грипп')),
                ('diphtheria', models.BooleanField(default=False, null=True, verbose_name='Дифтерия')),
                ('other_vaccnation', models.CharField(blank=True, max_length=200, null=True, verbose_name='Другие прививки')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='father', to='home.patient')),
            ],
        ),
        migrations.AddField(
            model_name='doctor',
            name='patients',
            field=models.ManyToManyField(blank=True, related_name='doctors', to='home.Patient'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='currentpregnancy',
            name='patient',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='current_pregnancy', to='home.patient'),
        ),
        migrations.CreateModel(
            name='ComplicationRisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complication_risk', models.CharField(blank=True, max_length=150, null=True, verbose_name='Риск осложнениний')),
                ('risk_value', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Значение индивидуального риска')),
                ('risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complications', to='home.obstetricrisk')),
            ],
            options={
                'verbose_name': 'Риск осложнения',
                'verbose_name_plural': 'Риски осложнений',
            },
        ),
        migrations.CreateModel(
            name='Coagulogram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('platelet_count', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Количество тромбоцитов, 10^9/л')),
                ('astv', models.CharField(blank=True, max_length=1000, null=True, verbose_name='АЧТВ, сек.')),
                ('fibrinogen', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Фибриноген, г/л')),
                ('prothrombin_time', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Протромбиновое время, %')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='сoagulogram', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='CervixCytologicalExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('result', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Результат')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cervix_exam', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='CarvixScar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('operation_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название операции')),
                ('if_caesarean', models.CharField(blank=True, max_length=200, null=True, verbose_name='При кесаревом сечении')),
                ('scar_localization', models.CharField(blank=True, max_length=200, null=True, verbose_name='Локализация рубца на матке')),
                ('operation_features', models.CharField(blank=True, max_length=200, null=True, verbose_name='Особенности операции, п/о периода')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carvix', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='BloodAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('hemoglobin', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Гемоглобин, г/л')),
                ('red_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Эритроциты, 10^12/л')),
                ('color_indicator', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Цветовой показатель, %')),
                ('reticulocytes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ретикулоциты, %')),
                ('platelets', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Тромбоциты, 10^9/л')),
                ('white_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Лейкоциты, 10^9/л')),
                ('myelocytes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Миелоциты, %')),
                ('metamyelocytes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Метамиелоциты, %')),
                ('stick_core', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Палочкоядерные, %')),
                ('segmentonuclear', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Сегметоядерные, %')),
                ('eosinophils', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Эозинофилы, %')),
                ('basophils', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Базофилы, %')),
                ('lymphocytes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Лимфоциты , %')),
                ('monocytes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Моноциты, %')),
                ('soe', models.CharField(blank=True, max_length=1000, null=True, verbose_name='СОЭ, мм/ч')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_analysis', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='BiochemicalBloodAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('total_bilirubin', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Общий билирубин, мкмоль/л')),
                ('direct_bilirubin', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Прямой билирубин, мкмоль/л')),
                ('total_protein', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Общий белок, г/л')),
                ('alt', models.CharField(blank=True, max_length=1000, null=True, verbose_name='АЛТ, ЕД/л')),
                ('ast', models.CharField(blank=True, max_length=1000, null=True, verbose_name='АСТ, ЕД/л')),
                ('glucose', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Глюкоза, ммоль/л')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biochemical_blood', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='BacterioscopicSmearsExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('c_white_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Лейкоциты')),
                ('c_epithelium', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Эпителий')),
                ('c_key_cels', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ключевые клетки')),
                ('c_candida', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Кандиды')),
                ('c_trichomonads', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Трихомонады')),
                ('c_gonococci', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Гонококки')),
                ('c_ph', models.CharField(blank=True, max_length=1000, null=True, verbose_name='pH')),
                ('v_white_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Лейкоциты')),
                ('v_epithelium', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Эпителий')),
                ('v_key_cels', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ключевые клетки')),
                ('v_candida', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Кандиды')),
                ('v_trichomonads', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Трихомонады')),
                ('v_gonococci', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Гонококки')),
                ('v_ph', models.CharField(blank=True, max_length=1000, null=True, verbose_name='pH')),
                ('u_white_blood_cells', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Лейкоциты')),
                ('u_epithelium', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Эпителий')),
                ('u_key_cels', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ключевые клетки')),
                ('u_candida', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Кандиды')),
                ('u_trichomonads', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Трихомонады')),
                ('u_gonococci', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Гонококки')),
                ('u_ph', models.CharField(blank=True, max_length=1000, null=True, verbose_name='pH')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bacterio_smears', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_number', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Номер посещения')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('analysis', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Анализ')),
                ('appointment', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Назначения')),
                ('disability_certificate', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Листок нетрудоспособности')),
                ('next_visit_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='AntiresusBodies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('antiresus_bodies', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Антирезусные тела')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='antiresus_bodies', to='home.currentpregnancy')),
            ],
        ),
        migrations.CreateModel(
            name='AntibodiesDetermination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('treponema_antibodies', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Антитела к бледной трепонеме')),
                ('hiv_antibodies', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Антитела классов M, G к ВИЧ ½ и антиген р24')),
                ('hbsag_antibodies', models.CharField(blank=True, max_length=1000, null=True, verbose_name='HBsAg или антитела к HBsAg')),
                ('anti_hcv', models.CharField(blank=True, max_length=1000, null=True, verbose_name='anti-HCV IgG и anti-HCV IgM')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('current_pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='antibodies', to='home.currentpregnancy')),
            ],
        ),
    ]
