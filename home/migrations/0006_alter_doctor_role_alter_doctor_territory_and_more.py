# Generated by Django 4.0.2 on 2022-10-16 21:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0005_alter_doctor_role_alter_doctor_territory_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='doctor',
            name='role',
            field=models.CharField(choices=[('акушер-гинеколог', 'акушер-гинеколог'), ('специалист', 'специалист'), ('педиатор', 'педиатор'), ('офтальмолог', 'офтальмолог'), ('терапевт ', 'терапевт'), ('стоматолог', 'стоматолог')], default='----', max_length=30, verbose_name='Должность врача'),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='territory',
            field=models.CharField(choices=[('', '----'), ('Старомайнский', 'Старомайнский район'), ('Барышский', 'Барышский район'), ('Николаевский', 'Николаевский район'), ('Старокулаткинский', 'Старокулаткинский район'), ('Майнский', 'Майнский район'), ('Павловский', 'Павловский район'), ('Сурский', 'Сурский район'), ('Карсунский', 'Карсунский район'), ('Тереньгульский', 'Тереньгульский район'), ('Сенгилеевский', 'Сенгилеевский район'), ('Инзенский', 'Инзенский район'), ('Чердаклинский', 'Чердаклинский район '), ('Цильнинский', 'Цильнинский район'), ('Кузоватовский', 'Кузоватовский район'), ('Радищевский', 'Радищевский район'), ('Новоспасский', 'Новоспасский район'), ('Мелекесский', 'Мелекесский район'), ('Вешкаймский', 'Вешкаймский район'), ('Базарносызганский', 'Базарносызганский район'), ('Новомалыклинский', 'Новомалыклинский район'), ('Ульяновский', 'Ульяновский район')], default='Ульяновский', max_length=25, verbose_name='Территория'),
        ),
        migrations.AlterField(
            model_name='fatherinfo',
            name='bad_habits',
            field=models.CharField(blank=True, choices=[('a', 'Алкоголь'), ('', '----'), ('d', 'Наркотики'), ('s', 'Курение')], max_length=10, null=True, verbose_name='Вредные привычки'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='father_blood_group',
            field=models.CharField(blank=True, choices=[('3', 'B(III)'), ('2', 'A(II)'), ('1', 'O(I)'), ('4', 'AB(IV)')], max_length=1, null=True, verbose_name='Группа крови'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='father_blood_rh',
            field=models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=1, null=True, verbose_name='Rh-фактор'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='marital_status',
            field=models.CharField(blank=True, choices=[('', '----'), ('5', 'Разведена'), ('6', 'Разошлась'), ('4', 'Вдова'), ('2', 'Состоит в зарегистрированном браке'), ('3', 'Состоит в незарегистрированном браке'), ('1', 'Никогда не состояла в браке')], default='', max_length=1, null=True, verbose_name='Брачное состояние'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='mother_blood_group',
            field=models.CharField(blank=True, choices=[('3', 'B(III)'), ('2', 'A(II)'), ('1', 'O(I)'), ('4', 'AB(IV)')], max_length=1, null=True, verbose_name='Группа крови'),
        ),
        migrations.AlterField(
            model_name='medicalcard',
            name='mother_blood_rh',
            field=models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=1, null=True, verbose_name='Rh-фактор'),
        ),
        migrations.AlterField(
            model_name='obstetricrisk',
            name='visit',
            field=models.CharField(blank=True, choices=[('1', 'Первая явка'), ('30-40', 'Явка на 30-40 неделе'), ('18-20', 'Явка на 18-20 неделе'), ('11-14', 'Явка на 11-14 неделе')], max_length=5, null=True, verbose_name='Срок явки'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='gender',
            field=models.CharField(choices=[('f', 'Женский'), ('m', 'Мужской'), ('', '----')], default='f', max_length=1, verbose_name='Пол'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='telephone',
            field=phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Телефонный номер'),
        ),
        migrations.AlterField(
            model_name='patientinformation',
            name='alcohol',
            field=models.CharField(blank=True, choices=[('', '----'), ('1-2w', '1-2 раза в неделю'), ('1-2m', '1-2 раза в месяц'), ('1', 'Каждый день')], max_length=10, null=True, verbose_name='Алкоголь'),
        ),
        migrations.AlterField(
            model_name='patientinformation',
            name='dispensary_accounting',
            field=models.CharField(blank=True, choices=[('1', 'Состояла'), ('0', 'Не состояла')], max_length=1, null=True, verbose_name='Диспансерский учет'),
        ),
        migrations.AlterField(
            model_name='patientinformation',
            name='hiv_status',
            field=models.CharField(blank=True, choices=[('1', 'Положительный'), ('0', 'Отрицательный')], max_length=1, null=True, verbose_name='ВИЧ-статус'),
        ),
        migrations.AlterField(
            model_name='patientinformation',
            name='profusion',
            field=models.CharField(blank=True, choices=[('3', 'Обильные'), ('2', 'Умеренные'), ('1', 'Скудные')], max_length=10, null=True, verbose_name='Обильность'),
        ),
        migrations.AlterField(
            model_name='patientinformation',
            name='regularity',
            field=models.CharField(blank=True, choices=[('0', 'Нерегулярные'), ('1', 'Регулярные')], max_length=10, null=True, verbose_name='Регулярность'),
        ),
        migrations.AlterField(
            model_name='patientinformation',
            name='smoking',
            field=models.CharField(blank=True, choices=[('', '----'), ('1/2-1', 'От 1/2 до 1 пачки'), ('<1/2', 'Меньше 1/2 пачки'), ('1>', 'Больше 1 пачки')], max_length=10, null=True, verbose_name='Курение (в день)'),
        ),
        migrations.AlterField(
            model_name='pregnancyoutcome',
            name='if_abortion',
            field=models.CharField(blank=True, choices=[('s', 'Самопроизвольный'), ('a', 'Искусственный')], max_length=10, null=True, verbose_name='Аборт'),
        ),
        migrations.AlterField(
            model_name='pregnancyoutcome',
            name='pregnancy_outcome',
            field=models.CharField(blank=True, choices=[('b', 'Роды'), ('d', 'Смерть'), ('a', 'Аборт')], max_length=10, null=True, verbose_name='Исход беременности'),
        ),
        migrations.AlterField(
            model_name='pregnantwomanmonitoring',
            name='fetal_position',
            field=models.CharField(blank=True, choices=[('прод', 'Продольное'), ('кос', 'Косое'), ('попер', 'Попереченое')], max_length=10, null=True, verbose_name='Положение плода'),
        ),
        migrations.AlterField(
            model_name='pregnantwomanmonitoring',
            name='fetus_stirring',
            field=models.CharField(blank=True, choices=[('+', 'Ощущается'), ('-', 'Не ощущается')], max_length=10, null=True, verbose_name='Шевеление плода: (>16 недель)'),
        ),
        migrations.AlterField(
            model_name='pregnantwomanmonitoring',
            name='to_pelvis_entrance',
            field=models.CharField(blank=True, choices=[('гол', 'Головка'), ('тк', 'Тазовый конец'), ('др', 'Другое')], max_length=10, null=True, verbose_name='Над входом в малый таз'),
        ),
        migrations.CreateModel(
            name='UltrasoundFisrtTrimester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата осмотра')),
                ('number_of_fetuses', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(10)], verbose_name='Количество плодов')),
                ('egg_diameter', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9999)], verbose_name='Диаметр плодового яйца (мм)')),
                ('ktr', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9999)], verbose_name='КТР (мм)')),
                ('choriality_amniality', models.CharField(blank=True, max_length=200, null=True, verbose_name='СБ эмбрионов (уд/мин / не определяется)')),
                ('chorion_location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Хорион расположен')),
                ('pathology', models.CharField(blank=True, max_length=200, null=True, verbose_name='Патологии (если есть)')),
                ('pathology_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ultrasound_1', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='UltrasoundExamination_30_34',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('presentation', models.CharField(blank=True, choices=[('1', 'Тазовое'), ('0', 'Головное'), ('', '')], max_length=1, null=True, verbose_name='Предлежание')),
                ('amniotic_fluid', models.CharField(blank=True, choices=[('1', 'Маловодие'), ('2', 'Многоводие'), ('0', 'Норма'), ('', '')], max_length=1, null=True, verbose_name='Околоплодные воды')),
                ('placenta_location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Плацента расположена')),
                ('choriality_amniality', models.CharField(blank=True, max_length=200, null=True, verbose_name='СБ плода (уд/мин)')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('uzi_date', models.DateField(blank=True, null=True, verbose_name='УЗИ-цервикометрия. Дата')),
                ('uzi_result', models.CharField(blank=True, max_length=200, null=True, verbose_name='Заключение')),
                ('features', models.CharField(blank=True, max_length=200, null=True, verbose_name='Особенности')),
                ('cervical_canal_length', models.CharField(blank=True, max_length=200, null=True, verbose_name='длина сомкнутой части цервикального канала (мм)')),
                ('pharynx', models.BooleanField(blank=True, null=True, verbose_name='Зев закрыт')),
                ('pharynx_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('gestation_period_result', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('invasive_prenatal_diagnosis', models.CharField(blank=True, max_length=200, null=True, verbose_name='Инвазивная пренатальная диагностика (при высоком риске ХА)')),
                ('ipd_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('gestation_period_result_main', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности')),
                ('procedure_type', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Вид процедуры')),
                ('cariotype', models.CharField(blank=True, max_length=200, null=True, verbose_name='Кариотип/другое')),
                ('consilium_result', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Заключение консилиума (при ПРП и ХА) ')),
                ('result_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('result_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uzi_exam_2', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='UltrasoundExamination_19_21',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('number_of_fetuses', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(10)], verbose_name='Количество плодов')),
                ('pmp', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9999)], verbose_name='ПМП (г)')),
                ('choriality_amniality', models.CharField(blank=True, max_length=200, null=True, verbose_name='СБ плода (уд/мин / не определяется)')),
                ('prp', models.BooleanField(default=False, null=True, verbose_name='ПРП')),
                ('pathology_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('echo_marker_ha', models.CharField(blank=True, max_length=200, null=True, verbose_name='Эхо маркеры ХА')),
                ('risk_ha', models.CharField(blank=True, max_length=200, null=True, verbose_name='Риск ХА (перерасчет при эхо-маркерах ХА)')),
                ('amniotic_fluid', models.CharField(blank=True, choices=[('1', 'Маловодие'), ('2', 'Многоводие'), ('0', 'Норма'), ('', '')], max_length=1, null=True, verbose_name='Околоплодные воды')),
                ('placenta_location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Плацента расположена')),
                ('features', models.CharField(blank=True, max_length=200, null=True, verbose_name='Особенности')),
                ('cervical_canal_length', models.CharField(blank=True, max_length=200, null=True, verbose_name='длина сомкнутой части цервикального канала (мм)')),
                ('pharynx', models.BooleanField(blank=True, null=True, verbose_name='Зев закрыт')),
                ('pharynx_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('invasive_prenatal_diagnosis', models.CharField(blank=True, max_length=200, null=True, verbose_name='Инвазивная пренатальная диагностика (при высоком риске ХА)')),
                ('ipd_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('procedure_type', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Вид процедуры')),
                ('cardtype', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Кариотип/другое')),
                ('consilium_result', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Заключение консилиума (при ПРП и ХА) ')),
                ('result_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('result_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uzi_exam_1', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='FirstExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата осмотра')),
                ('complaints', models.BooleanField(default=False, null=True, verbose_name='Жалобы')),
                ('complaints_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('subcutaneous_fat_severity', models.CharField(blank=True, choices=[('5', 'Избыточно выражена'), ('2', 'По мужскому типу'), ('4', 'Нормально выражена'), ('', ''), ('3', 'Недостаточно выражена'), ('1', 'По женскому типу')], max_length=1, verbose_name='Распределение и выраженность подкожной жировой клетчатки')),
                ('edema', models.BooleanField(default=False, null=True, verbose_name='Отеки')),
                ('edema_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация (локация, выраженнось)')),
                ('lower_extremities_varicose', models.BooleanField(default=False, null=True, verbose_name='Варикозное расширение вен нижних конечностей')),
                ('enlarged_lymph_nodes', models.BooleanField(default=False, null=True, verbose_name='Увеличение лимфатических узлов')),
                ('lymph_nodes_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация (локализация, болезненность)')),
                ('mammary', models.CharField(blank=True, choices=[('2', 'Пальпируется узловое образование'), ('', ''), ('3', 'Безболезненны '), ('4', 'Масталгия'), ('1', 'Патологических изменений нет')], max_length=1, verbose_name='Осмотр и пальпация молочных желез')),
                ('mammary_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('nipples', models.CharField(blank=True, choices=[('1', 'Сформированы правильно'), ('2', 'Втянуты'), ('', '')], max_length=1, verbose_name='Осмотр и пальпация молочных желез')),
                ('nipples_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('heart_tones', models.CharField(blank=True, max_length=200, null=True, verbose_name='Тоны сердца')),
                ('pulse', models.CharField(blank=True, max_length=50, null=True, verbose_name='Пульс (уд/мин)')),
                ('rh_blood_pressure', models.CharField(blank=True, max_length=50, null=True, verbose_name='Артериальное даавлениена правой руке (мм.рт.ст.)')),
                ('lh_blood_pressure', models.CharField(blank=True, max_length=50, null=True, verbose_name='Артериальное даавление на левой руке (мм.рт.ст.)')),
                ('fetus_stirring', models.CharField(blank=True, choices=[('+', 'Ощущается'), ('-', 'Не ощущается')], max_length=10, null=True, verbose_name='Шевеление плода: (>16 недель)')),
                ('fetus_heartbeat', models.CharField(blank=True, max_length=50, null=True, verbose_name='Сердцебиение плода (уд/мин) (>12 недель)')),
                ('abdominal_circumference', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Окружность живота (см) (>20 недель)')),
                ('fetal_position', models.CharField(blank=True, choices=[('прод', 'Продольное'), ('кос', 'Косое'), ('попер', 'Попереченое')], max_length=10, null=True, verbose_name='Положение плода')),
                ('to_pelvis_entrance', models.CharField(blank=True, choices=[('гол', 'Головка'), ('тк', 'Тазовый конец'), ('др', 'Другое')], max_length=10, null=True, verbose_name='Над входом в малый таз (после 34 недель)')),
                ('adjacent_part', models.CharField(blank=True, choices=[('под', 'Подвижна'), ('приж', 'Прижата')], max_length=10, null=True, verbose_name='Предлежащая часть (после 34 недель)')),
                ('cervix_examination', models.CharField(blank=True, max_length=200, null=True, verbose_name='Осмотр шейки матки в зеркалах')),
                ('cervix_visual_changes', models.CharField(blank=True, max_length=200, null=True, verbose_name='Визуальные изменения')),
                ('external_genitalia', models.CharField(blank=True, max_length=200, null=True, verbose_name='Наружные половые органы (указать отклонения, если есть)')),
                ('external_genitalia_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('vagina', models.CharField(blank=True, max_length=200, null=True, verbose_name='Указать патологии (если есть)')),
                ('vagina_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('cervix', models.CharField(blank=True, choices=[('2', 'Размягченная'), ('1', 'Плотная'), ('3', 'Мягкая'), ('', '')], max_length=10, null=True, verbose_name='Шейка матки')),
                ('cervix_length', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='Длина шейки матки (см)')),
                ('cervix_deviations', models.CharField(blank=True, choices=[('1', 'Кзади'), ('3', 'Расположена по центру'), ('2', 'Кпереди'), ('', '')], max_length=10, null=True, verbose_name='Отклонения шейки матки')),
                ('mucosa', models.CharField(blank=True, max_length=200, null=True, verbose_name='Слизистая')),
                ('external_pharynx', models.CharField(blank=True, choices=[('1', 'Пропускает кончик пальца'), ('1', 'Сомкнут'), ('1', 'Пропускает палец'), ('', '')], max_length=1, null=True, verbose_name='Наружний зев')),
                ('uterus_body', models.CharField(blank=True, choices=[('', ''), ('1', 'Подвижное'), ('3', 'Болезненное'), ('2', 'Безболезненное')], max_length=1, null=True, verbose_name='Тело матки. Характеристика')),
                ('uterus_body_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('left_appendages', models.CharField(blank=True, choices=[('', ''), ('1', 'Без особенностей'), ('2', 'Есть особенности')], max_length=1, null=True, verbose_name='Придатки слева')),
                ('left_appendages_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('right_appendages', models.CharField(blank=True, choices=[('', ''), ('1', 'Без особенностей'), ('2', 'Есть особенности')], max_length=1, null=True, verbose_name='Придатки справа')),
                ('right_appendages_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('exostoses', models.BooleanField(default=False, null=True, verbose_name='Экзостозы')),
                ('exostoses_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('cervical_canal_separated', models.CharField(blank=True, max_length=200, null=True, verbose_name='Отделяемое из цервикального канала')),
                ('vagina_separated', models.CharField(blank=True, max_length=200, null=True, verbose_name='Отделяемое из влагалища')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('analisys', models.CharField(blank=True, max_length=200, null=True, verbose_name='Анализы')),
                ('appointments', models.CharField(blank=True, max_length=200, null=True, verbose_name='Назначения')),
                ('date_diagnosis', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_examination', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorExaminations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата осмотра')),
                ('result', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Результаты осмотра, заключение')),
                ('ecg_date', models.DateField(blank=True, null=True, verbose_name='Дата ЭКГ')),
                ('ecgresult', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Результаты ЭКГ')),
                ('med_org', models.CharField(blank=True, choices=[('', '----'), ('1', 'Болька 1'), ('2', 'Болька 2'), ('3', 'Болька 3')], max_length=150, verbose_name='Медицинская организация')),
                ('doctor_fio', models.CharField(blank=True, max_length=300, null=True, verbose_name='Ф.И.О. врача, проводившего осмотр')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_examination', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='CurrentPregnancyinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pregnancy', models.CharField(blank=True, choices=[('1', 'Первая'), ('', ''), ('2', 'Повторная'), ('4', 'Индуцирована с помощью ВРТ'), ('3', 'Наступила спонтанно')], max_length=1, verbose_name='Беременность')),
                ('try_number', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Номер попытки')),
                ('embryo_transfer', models.CharField(blank=True, choices=[('2', 'Криоконсервированного'), ('1', 'Нативного'), ('', '')], max_length=1, verbose_name='Перенос эмбрионов')),
                ('embryo_date', models.DateField(blank=True, null=True, verbose_name='Дата переноса эмбриона')),
                ('embryo_number', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Число перенесенных эмбрионов')),
                ('mother_age', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Число перенесенных эмбрионов')),
                ('upcoming_births', models.CharField(blank=True, choices=[('2', 'Повторные'), ('1', 'Первые'), ('', '')], max_length=1, verbose_name='Предстоящие роды')),
                ('pregnancy_1', models.CharField(blank=True, choices=[('1', 'Одноплодность'), ('2', 'Многоплодность'), ('', '')], max_length=1, verbose_name='Беременность')),
                ('fetus_number', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9)], verbose_name='Количество плодов')),
                ('last_menstruation', models.DateField(blank=True, null=True, verbose_name='Последняя менструация')),
                ('first_uzi', models.DateField(blank=True, null=True, verbose_name='Дата 1-го УЗИ')),
                ('gestation_period', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недель)')),
                ('pregnancy_accounting_date', models.DateField(blank=True, null=True, verbose_name='Учет по беременности')),
                ('pregnancy_accounting_period', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок (недель)')),
                ('fetus_first_stirring', models.DateField(blank=True, null=True, verbose_name='Первое шевеление плода')),
                ('suppose_birth_date', models.DateField(blank=True, null=True, verbose_name='Предполагаемая дата родов')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pregnancy_info', to='home.patient')),
            ],
        ),
        migrations.CreateModel(
            name='ComprehensiveRiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата осмотра')),
                ('number_of_fetuses', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(10)], verbose_name='Количество плодов')),
                ('ktr', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9999)], verbose_name='КТР (мм)')),
                ('tvp', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9999)], verbose_name='ТВП (мм)')),
                ('choriality_amniality', models.CharField(blank=True, max_length=200, null=True, verbose_name='СБ эмбрионов (уд/мин)')),
                ('cervicometry', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Цервикометрия (мм)')),
                ('uterine_pulse_index', models.CharField(blank=True, choices=[('2', 'Левая'), ('1', 'Правая'), ('', '')], max_length=1, null=True, verbose_name='ПИ маточных артерий')),
                ('vpr', models.BooleanField(default=False, null=True, verbose_name='ВПР')),
                ('vpr_str', models.CharField(blank=True, max_length=200, null=True, verbose_name='Дополнительная информация')),
                ('papp_a', models.CharField(blank=True, max_length=1000, null=True, verbose_name='РАРР-А (мЕД/мл)')),
                ('mom_papp_a', models.CharField(blank=True, max_length=1000, null=True, verbose_name='МОМ')),
                ('b_hgch', models.CharField(blank=True, max_length=1000, null=True, verbose_name='бета-ХГЧ (мЕД/мл)')),
                ('mom_b_hgch', models.CharField(blank=True, max_length=1000, null=True, verbose_name='МОМ')),
                ('trisomy_21', models.CharField(blank=True, choices=[('0', 'Низкий'), ('1', 'Высокий'), ('', '')], max_length=1, null=True, verbose_name='21 трисомии')),
                ('trisomy_18', models.CharField(blank=True, choices=[('0', 'Низкий'), ('1', 'Высокий'), ('', '')], max_length=1, null=True, verbose_name='18 трисомии')),
                ('zrp', models.CharField(blank=True, choices=[('0', 'Низкий'), ('1', 'Высокий'), ('', '')], max_length=1, null=True, verbose_name='ЗРП')),
                ('trisomy_13', models.CharField(blank=True, choices=[('0', 'Низкий'), ('1', 'Высокий'), ('', '')], max_length=1, null=True, verbose_name='ПЭ поздний (до 37 недель)')),
                ('gestation_period_weeks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Срок беременности (недели)')),
                ('doctor_confirmation', models.BooleanField(default=False, null=True, verbose_name='Подтверждение врача')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_assessment', to='home.patient')),
            ],
        ),
    ]
